<div class="column is-half-desktop is-full-tablet is-full-mobile">
  <div class="notification is-light" id="CalendarWidget-<%=widget.position%>">

    <div class="columns">
      <div class="column">
        <h1 class="title is-5">Google Calendar</h1>
      </div>
      <div class="column is-right">
        <button id="authorize_button" class="button is-light p-1 is-pulled-right" style="display: none;">Se Connecter</button>
        <button id="signout_button" class="button is-danger p-1 is-pulled-right" style="display: none;"></button>
      </div>
    </div>
    <table class="table is-info mt-1 is-striped is-hoverable is-fullwidth m-0 p-0" id="googleCalendar-<%=widget.position%>">
      <tr>
      </tr>
    </table>
  </div>
</div>
<script type="text/javascript">
  var CLIENT_ID = '521134939418-hu74m1un53097f6gcejv9d8tdnukse2i.apps.googleusercontent.com';
  var API_KEY = 'AIzaSyAtfD0hEu5Ww127jyLFQE1JBJfljxwFQKE';
  var DISCOVERY_DOCS = ["https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest"];
  var SCOPES = "https://www.googleapis.com/auth/calendar.readonly";

  var authorizeButton = document.getElementById('authorize_button');
  var signoutButton = document.getElementById('signout_button');


  function handleClientLoad() {
    gapi.load('client:auth2', initClient);
  }

  function initClient() {
    gapi.client.init({
      apiKey: API_KEY,
      clientId: CLIENT_ID,
      discoveryDocs: DISCOVERY_DOCS,
      scope: SCOPES
    }).then(function () {
      // Listen for sign-in state changes.
      gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus);

      // Handle the initial sign-in state.
      updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());
      authorizeButton.onclick = handleAuthClick;
      signoutButton.onclick = handleSignoutClick;
    }, function (error) {
      appendPre(JSON.stringify(error, null, 2), "");
    });
  }

  function updateSigninStatus(isSignedIn) {
    if (isSignedIn) {
      authorizeButton.style.display = 'none';
      signoutButton.style.display = 'none';
      listUpcomingEvents();
    } else {
      authorizeButton.style.display = 'block';
      signoutButton.style.display = 'none';
    }
  }


  function handleAuthClick(event) {
    gapi.auth2.getAuthInstance().signIn();
  }

  function handleSignoutClick(event) {
    gapi.auth2.getAuthInstance().signOut();
  }

  function appendPre(message, date) {
    var refTable = document.getElementById("googleCalendar-<%=widget.position%>");
    var nouvelleLigne = refTable.insertRow(-1);
    var nouvelleCellule = nouvelleLigne.insertCell(0);
    var nouvelleCellule2 = nouvelleLigne.insertCell(1);
    var nouveauTexte = document.createTextNode(message)
    var nouveauTexte2 = document.createTextNode(date)
    nouvelleCellule.appendChild(nouveauTexte);
    nouvelleCellule2.appendChild(nouveauTexte2);
  }

  function listUpcomingEvents() {
    var refTable = document.getElementById("googleCalendar-" + <%=widget.position %>);
    gapi.client.calendar.events.list({
      'calendarId': 'primary',
      'timeMin': (new Date()).toISOString(),
      'showDeleted': false,
      'singleEvents': true,
      'maxResults': <%=widget.param1 %>,
      'orderBy': 'startTime'
    }).then(function (response) {
      var events = response.result.items;

      if (events.length > 0) {
        for (i = 0; i < events.length; i++) {
          var event = events[i];
          var when = event.start.dateTime;
          if (!when) {
            when = event.start.date;
          } else {
            when = when.split("T")[0] + "  " + when.split("T")[1].substring(0, 5) + "-" + event.end.dateTime.split("T")[1].substring(0, 5)
          }
          appendPre(event.summary, when)
        }
      } else {
        appendPre('No upcoming events found.', "");
      }
    });
  }

</script>

<script async defer src="https://apis.google.com/js/api.js" onload="this.onload=function(){};handleClientLoad()"
  onreadystatechange="if (this.readyState === 'complete') this.onload()">
  </script>